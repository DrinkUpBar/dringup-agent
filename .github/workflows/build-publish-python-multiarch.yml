name: Build and Publish Python Multi‑Arch Image

on:
  push:
    branches: [ "dev" ]
    tags:     [ "v*" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            suffix: amd64
          - platform: linux/arm64
            suffix: arm64

    env:
      # 可自定义镜像名（仓库/组织前缀通过 secrets 传入）
      IMAGE_NAME: drinkup-agent

    steps:
      # ───────── 1. 检出代码 ─────────
      - uses: actions/checkout@v4

      # ───────── 2. 启用 QEMU & Buildx ─────────
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # ───────── 3. 登录镜像仓库 ─────────
      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ───────── 4. 构建并推送单架构镜像 ─────────
      - name: Show Image Name
        run: |
          echo "Image name: ${{ env.DOCKER_IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.suffix }}"
        env:
          DOCKER_IMAGE_REPO: "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_ORG }}"

      - name: Build & Push (${{ matrix.platform }})
        env:
          DOCKER_IMAGE_REPO: "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_ORG }}"
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --tag ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:${{ matrix.suffix }} \
            --cache-from type=registry,ref=${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:buildcache \
            --cache-to type=registry,ref=${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:buildcache,mode=max \
            --push \
            .

  manifest:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ───────── 5. 生成并推送多架构 manifest ─────────
      - name: Create & Push Multi‑Arch Manifest
        env:
          DOCKER_IMAGE_REPO: "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_ORG }}"
          IMAGE_NAME: drinkup-agent
        run: |
          docker buildx imagetools create \
            --tag ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:latest \
            ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:amd64 \
            ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:arm64

      # ───────── 6. 安装并配置 Cosign ─────────
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.2.2'

      # ───────── 7. 使用 Cosign 签名镜像 ─────────
      - name: Sign the images with Cosign
        env:
          DOCKER_IMAGE_REPO: "${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_ORG }}"
          IMAGE_NAME: drinkup-agent
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "$COSIGN_PRIVATE_KEY" > cosign.key
          cosign sign --key cosign.key ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:latest
          cosign sign --key cosign.key ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:amd64
          cosign sign --key cosign.key ${DOCKER_IMAGE_REPO}/${IMAGE_NAME}:arm64
          rm -f cosign.key
